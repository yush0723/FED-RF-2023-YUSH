{"ast":null,"code":"var _jsxFileName = \"d:\\\\GitYush\\\\FED-RF-2023-YUSH\\\\999.\\uAC1C\\uC778 \\uD504\\uB85C\\uC81D\\uD2B82\\\\02.\\uAD6C\\uD604\\uCF54\\uB4DC\\\\tt-app\\\\src\\\\modules\\\\Banner.jsx\";\n// Pilot PJ 메인 페이지 배너 컴포넌트\n\n// 배너용 CSS 불러오기\nimport '../css/banner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Banner() {\n  // 배너리스트 개수\n  const BAN_CNT = 6;\n\n  // 리스트를 만드는 함수 ////\n  const makeList = gubun => {\n    // gubun : 1 - 배너 / 0 - 블릿\n    // for문을 돌려서 태그를 생성할때 배열에 담는다!\n    // -> 문자형이 아닌 JSX의 태그이므로 배열에 담고\n    // for문 없이 그대로 태그를 출력할 수 있다!\n    let hcode = [];\n    for (let i = 0; i < BAN_CNT; i++) {\n      if (gubun) {\n        // 배너코드\n        hcode[i] = /*#__PURE__*/_jsxDEV(\"li\", {\n          className: 'ban' + (i == 0 ? '6' : i),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ir\",\n            children: [\"\\uBC30\\uB108\", i == 0 ? '6' : i]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this);\n      } else {\n        // 블릿코드\n        hcode[i] = /*#__PURE__*/_jsxDEV(\"li\", {\n          className: i == 0 ? 'on' : '',\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bld\",\n              children: \"\\uBE14\\uB9BF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this);\n      }\n    } //////// for //////////\n\n    // console.log(hcode);\n\n    // 코드리턴\n    return hcode;\n  }; ///////// makeList 함수 /////////\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"slide\",\n      children: makeList(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"bindic\",\n      children: makeList(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //////////// Banner 컴포넌트 ///////////\n_c = Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","BAN_CNT","makeList","gubun","hcode","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["d:/GitYush/FED-RF-2023-YUSH/999.개인 프로젝트2/02.구현코드/tt-app/src/modules/Banner.jsx"],"sourcesContent":["// Pilot PJ 메인 페이지 배너 컴포넌트\r\n\r\n// 배너용 CSS 불러오기\r\nimport '../css/banner.css'\r\n\r\nexport function Banner() {\r\n\r\n    // 배너리스트 개수\r\n    const BAN_CNT = 6;\r\n\r\n    // 리스트를 만드는 함수 ////\r\n    const makeList = (gubun) => {\r\n        // gubun : 1 - 배너 / 0 - 블릿\r\n        // for문을 돌려서 태그를 생성할때 배열에 담는다!\r\n        // -> 문자형이 아닌 JSX의 태그이므로 배열에 담고\r\n        // for문 없이 그대로 태그를 출력할 수 있다!\r\n        let hcode = [];\r\n\r\n        for(let i=0;i<BAN_CNT;i++){\r\n            if(gubun){ // 배너코드\r\n                hcode[i] =\r\n                <li className={'ban'+(i==0?'6':i)} key={i}>\r\n                    <span className=\"ir\">배너{i==0?'6':i}</span>\r\n                </li>\r\n            }\r\n            else{ // 블릿코드\r\n                hcode[i] =\r\n                <li className={i==0?'on':''} key={i}>\r\n                    <a href=\"#\">\r\n                        <span className=\"bld\">블릿</span>\r\n                    </a>\r\n                </li>\r\n            }\r\n\r\n        } //////// for //////////\r\n\r\n        // console.log(hcode);\r\n\r\n        // 코드리턴\r\n        return hcode;\r\n\r\n    };///////// makeList 함수 /////////\r\n\r\n  return (\r\n    <>\r\n    {/* 배열로 태그를 받았지만 그 데이터가 JSX문법의 데이터이고\r\n    JSX문법의 태그 내부에 호출하여 태그가 그대로 출력됨!\r\n    map() 으로 순회하여 태그를 만들때도 동일한 원리가 작동됨! */}\r\n      <ul className=\"slide\">{makeList(1)}</ul>\r\n      <ol className=\"bindic\">{makeList(0)}</ol>\r\n      <div className=\"cover\"></div>\r\n    </>\r\n  );\r\n} //////////// Banner 컴포넌트 ///////////"],"mappings":";AAAA;;AAEA;AACA,OAAO,mBAAmB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,SAASC,MAAMA,CAAA,EAAG;EAErB;EACA,MAAMC,OAAO,GAAG,CAAC;;EAEjB;EACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxB;IACA;IACA;IACA;IACA,IAAIC,KAAK,GAAG,EAAE;IAEd,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,OAAO,EAACI,CAAC,EAAE,EAAC;MACtB,IAAGF,KAAK,EAAC;QAAE;QACPC,KAAK,CAACC,CAAC,CAAC,gBACRR,OAAA;UAAIS,SAAS,EAAE,KAAK,IAAED,CAAC,IAAE,CAAC,GAAC,GAAG,GAACA,CAAC,CAAE;UAAAE,QAAA,eAC9BV,OAAA;YAAMS,SAAS,EAAC,IAAI;YAAAC,QAAA,GAAC,cAAE,EAACF,CAAC,IAAE,CAAC,GAAC,GAAG,GAACA,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADNN,CAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAErC,CAAC;MACT,CAAC,MACG;QAAE;QACFP,KAAK,CAACC,CAAC,CAAC,gBACRR,OAAA;UAAIS,SAAS,EAAED,CAAC,IAAE,CAAC,GAAC,IAAI,GAAC,EAAG;UAAAE,QAAA,eACxBV,OAAA;YAAGe,IAAI,EAAC,GAAG;YAAAL,QAAA,eACPV,OAAA;cAAMS,SAAS,EAAC,KAAK;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC,GAH0BN,CAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAI/B,CAAC;MACT;IAEJ,CAAC,CAAC;;IAEF;;IAEA;IACA,OAAOP,KAAK;EAEhB,CAAC,CAAC;;EAEJ,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBAIEV,OAAA;MAAIS,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEL,QAAQ,CAAC,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCd,OAAA;MAAIS,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAEL,QAAQ,CAAC,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzCd,OAAA;MAAKS,SAAS,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC,CAAC;AAAAE,EAAA,GAhDcb,MAAM;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}