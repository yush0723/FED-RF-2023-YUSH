{"ast":null,"code":"var _jsxFileName = \"d:\\\\GitYush\\\\FED-RF-2023-YUSH\\\\999.\\uAC1C\\uC778 \\uD504\\uB85C\\uC81D\\uD2B82\\\\02.\\uAD6C\\uD604\\uCF54\\uB4DC\\\\tt-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\n// 메인 페이지 JS - index.js\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport ReactDOM, { createRoot } from 'react-dom/client';\n// 컨텍스트 API 불러오기\nimport { pCon } from './modules/PilotContext';\nimport { TopArea } from './layout/TopArea';\nimport { MainArea } from './layout/MainArea';\nimport { FooterArea } from './layout/FooterArea';\n\n// 제이쿼리 \nimport $ from 'jquery';\nimport 'jquery-ui-dist/jquery-ui';\n\n// 페이지 공통 CSS\nimport './css/common.css';\n\n// 최상위 Root 컴포넌트 ///////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 후크상태변수 설정 : 페이지변경\n  const [pgName, setPgName] = useState('main');\n\n  // 페이지변경 상태변수 업데이트 함수\n  const chgPgName = txt => {\n    setPgName(txt);\n  }; ///////// chgPgName 함수 //////\n\n  // 랜더링 후 실행구역 ////////////\n  useEffect(() => {\n    // 햄버거 버튼 클릭시 전체 메뉴 보이기/숨기기\n    $('.ham').click(e => {\n      // 1. 전체메뉴 박스 : .mbox -> 보이기/숨기기\n      $('.mbox').fadeToggle(400);\n\n      // 2. 햄버거버튼에 클래스 'on' 넣기/빼기\n      $(e.currentTarget).toggleClass('on');\n      // e.target과 e.currentTarget은 다르다!\n      // 후자가 햄버거 버튼 자신임!\n      // console.log(e.currentTarget)\n\n      // 3. 비디오 재생/멈춤 : 대상 - .bgm\n      // get(0)은 비디오컬렉션임! -> 제이쿼리용\n      const vid = $('.bgm').get(0);\n      vid.paused ? vid.play() : vid.pause();\n      // console.log(vid.paused);\n      // paused 속성 : 동영상 멈춤일때 true 리턴\n      // play() 메서드 : 동영상 재생 메서드\n      // pause() 메서드 : 동영상 정지 메서드\n    }); //////// click ////////\n\n    // 랜더링구역 한번만 실행 : 옵션 []\n  }, []); ////////// useEffect //////////////\n\n  // 처음 로딩시 스크롤 상단이동 //////\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0);\n  }); ///// useLayoutEffect //////////\n\n  // 리턴코드 //////////////////////////\n  return /*#__PURE__*/_jsxDEV(pCon.Provider, {\n    value: {\n      pgName,\n      chgPgName\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopArea, {\n      cat: pgName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MainArea, {\n      page: pgName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FooterArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n} ///////////// App 컴포넌트 /////////////\n\n/* \n<button onClick={()=>chgPgName('main')}>\n  메인페이지\n</button>\n<button onClick={()=>chgPgName('men')}>\n  남성페이지\n</button>\n<button onClick={()=>chgPgName('women')}>\n  여성페이지\n</button>\n<button onClick={()=>chgPgName('style')}>\n  스타일페이지\n</button>\n*/\n\n// 출력하기 ///////\n_s(App, \"uYz08bbLRJrGMeaJ3voPzWOSxKc=\");\n_c = App;\nconst root = createRoot(document.querySelector('#root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","ReactDOM","createRoot","pCon","TopArea","MainArea","FooterArea","$","jsxDEV","_jsxDEV","App","_s","pgName","setPgName","chgPgName","txt","click","e","fadeToggle","currentTarget","toggleClass","vid","get","paused","play","pause","window","scrollTo","Provider","value","children","cat","fileName","_jsxFileName","lineNumber","columnNumber","page","_c","root","document","querySelector","render","$RefreshReg$"],"sources":["d:/GitYush/FED-RF-2023-YUSH/999.개인 프로젝트2/02.구현코드/tt-app/src/index.js"],"sourcesContent":["// 메인 페이지 JS - index.js\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport ReactDOM, { createRoot } from 'react-dom/client';\n// 컨텍스트 API 불러오기\nimport { pCon } from './modules/PilotContext';\n\nimport { TopArea } from './layout/TopArea';\nimport { MainArea } from './layout/MainArea';\nimport { FooterArea } from './layout/FooterArea';\n\n// 제이쿼리 \nimport $ from 'jquery';\nimport 'jquery-ui-dist/jquery-ui';\n\n\n// 페이지 공통 CSS\nimport './css/common.css';\n\n// 최상위 Root 컴포넌트 ///////\nfunction App(){\n\n  // 후크상태변수 설정 : 페이지변경\n  const [pgName,setPgName] = useState('main');\n\n  // 페이지변경 상태변수 업데이트 함수\n  const chgPgName = (txt) => {\n    setPgName(txt);\n  }; ///////// chgPgName 함수 //////\n\n  // 랜더링 후 실행구역 ////////////\n  useEffect(()=>{\n    // 햄버거 버튼 클릭시 전체 메뉴 보이기/숨기기\n    $('.ham').click(e=>{\n      // 1. 전체메뉴 박스 : .mbox -> 보이기/숨기기\n      $('.mbox').fadeToggle(400);\n\n      // 2. 햄버거버튼에 클래스 'on' 넣기/빼기\n      $(e.currentTarget).toggleClass('on');\n      // e.target과 e.currentTarget은 다르다!\n      // 후자가 햄버거 버튼 자신임!\n      // console.log(e.currentTarget)\n\n      // 3. 비디오 재생/멈춤 : 대상 - .bgm\n      // get(0)은 비디오컬렉션임! -> 제이쿼리용\n      const vid = $('.bgm').get(0);\n      vid.paused? vid.play() : vid.pause();\n      // console.log(vid.paused);\n      // paused 속성 : 동영상 멈춤일때 true 리턴\n      // play() 메서드 : 동영상 재생 메서드\n      // pause() 메서드 : 동영상 정지 메서드\n\n    }); //////// click ////////\n    \n    // 랜더링구역 한번만 실행 : 옵션 []\n  },[]); ////////// useEffect //////////////\n\n  // 처음 로딩시 스크롤 상단이동 //////\n  useLayoutEffect(()=>{\n    window.scrollTo(0,0);\n  }); ///// useLayoutEffect //////////\n\n\n\n  // 리턴코드 //////////////////////////\n  return(\n      <pCon.Provider value={{pgName,chgPgName}}>\n        <TopArea cat={pgName} />        \n        <MainArea page={pgName} />\n        <FooterArea />\n      </pCon.Provider>\n  )\n\n} ///////////// App 컴포넌트 /////////////\n\n/* \n<button onClick={()=>chgPgName('main')}>\n  메인페이지\n</button>\n<button onClick={()=>chgPgName('men')}>\n  남성페이지\n</button>\n<button onClick={()=>chgPgName('women')}>\n  여성페이지\n</button>\n<button onClick={()=>chgPgName('style')}>\n  스타일페이지\n</button>\n*/\n\n// 출력하기 ///////\nconst root = createRoot(document.querySelector('#root'));\nroot.render(<App />)"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,QAAQ,IAAIC,UAAU,QAAQ,kBAAkB;AACvD;AACA,SAASC,IAAI,QAAQ,wBAAwB;AAE7C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,UAAU,QAAQ,qBAAqB;;AAEhD;AACA,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAO,0BAA0B;;AAGjC;AACA,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAEZ;EACA,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;;EAE3C;EACA,MAAMc,SAAS,GAAIC,GAAG,IAAK;IACzBF,SAAS,CAACE,GAAG,CAAC;EAChB,CAAC,CAAC,CAAC;;EAEH;EACAjB,SAAS,CAAC,MAAI;IACZ;IACAS,CAAC,CAAC,MAAM,CAAC,CAACS,KAAK,CAACC,CAAC,IAAE;MACjB;MACAV,CAAC,CAAC,OAAO,CAAC,CAACW,UAAU,CAAC,GAAG,CAAC;;MAE1B;MACAX,CAAC,CAACU,CAAC,CAACE,aAAa,CAAC,CAACC,WAAW,CAAC,IAAI,CAAC;MACpC;MACA;MACA;;MAEA;MACA;MACA,MAAMC,GAAG,GAAGd,CAAC,CAAC,MAAM,CAAC,CAACe,GAAG,CAAC,CAAC,CAAC;MAC5BD,GAAG,CAACE,MAAM,GAAEF,GAAG,CAACG,IAAI,CAAC,CAAC,GAAGH,GAAG,CAACI,KAAK,CAAC,CAAC;MACpC;MACA;MACA;MACA;IAEF,CAAC,CAAC,CAAC,CAAC;;IAEJ;EACF,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;;EAEP;EACA1B,eAAe,CAAC,MAAI;IAClB2B,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC;;EAIJ;EACA,oBACIlB,OAAA,CAACN,IAAI,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAACjB,MAAM;MAACE;IAAS,CAAE;IAAAgB,QAAA,gBACvCrB,OAAA,CAACL,OAAO;MAAC2B,GAAG,EAAEnB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxB1B,OAAA,CAACJ,QAAQ;MAAC+B,IAAI,EAAExB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1B1B,OAAA,CAACH,UAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGtB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAxB,EAAA,CAtESD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAuEZ,MAAM4B,IAAI,GAAGpC,UAAU,CAACqC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAAC;AACxDF,IAAI,CAACG,MAAM,eAAChC,OAAA,CAACC,GAAG;EAAAsB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAA,IAAAE,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}